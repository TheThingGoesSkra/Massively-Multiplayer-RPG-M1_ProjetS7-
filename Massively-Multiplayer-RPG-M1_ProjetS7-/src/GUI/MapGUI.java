package GUI;

import Game.Pole;

import java.awt.*;
import javax.swing.JPanel;


public class MapGUI extends javax.swing.JFrame {



    class MapJPanel extends JPanel{
        private Image image;
        private Image player;
        private Image playerRight;
        private Pole direction;

        private int x, y;
        /** Creates a new instance of MonPanel */
        public MapJPanel(Image map, Image player, Image playerRight, int x, int y) {
            this.image = map;
            this.player = player;
            this.playerRight = playerRight;
            this.x=x;
            this.y=y;
            this.direction=Pole.EAST;
        }

        public int getx() {
            return x;
        }

        public void setx(int x) {
            this.x = x;
        }

        public int gety() {
            return y;
        }

        public void sety(int y) {
            this.y = y;
        }

        public Pole getDirection() {
            return direction;
        }

        public void setDirection(Pole direction) {
            this.direction = direction;
        }

        public void paintComponent(Graphics g) {
            super.paintComponent(g);
            g.drawImage(image,0,0,450, 365, this);
            float x;
            float y;
            int tamponwidth=450;
            int tamponheight=365;
            x=tamponwidth/8;
            x=x/4;
            y=tamponheight/8;
            y=y/4;
            if(direction==Pole.EAST) {
                g.drawImage(player, (((int) (x + x * 4 * this.x)) + 2), (((int) (y + y * 4 * this.y)) - 10 + ((this.y + 1) * 1)), 30, 40, this);
            }
            if(direction==Pole.WEST) {
                g.drawImage(playerRight, (((int) (x + x * 4 * this.x)) + 2), (((int) (y + y * 4 * this.y)) - 10 + ((this.y + 1) * 1)), 30, 40, this);
            }
        }

    };

    private MapJPanel jPanel1;

    public MapGUI(int x, int y) {
        initComponents(x,y);
    }

    public MapJPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(MapJPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents(int x, int y) {
        java.awt.Toolkit toolkit = java.awt.Toolkit.getDefaultToolkit();
        java.net.URL url = getClass().getResource("/GUI/Icones/Map.png");
        Image map = toolkit.getImage(url);
        url = getClass().getResource("/GUI/Icones/Adventurer2.png");
        Image player = toolkit.getImage(url);
        url = getClass().getResource("/GUI/Icones/Adventurer2_right.png");
        Image playerRight = toolkit.getImage(url);
        jPanel1 = new MapJPanel(map,player, playerRight,x,y);



        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setPreferredSize(new Dimension(450,365));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        this.setResizable(false);
    }// </editor-fold>

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MapGUI(0,2).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    // End of variables declaration
}
